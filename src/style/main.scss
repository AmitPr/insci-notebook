@import "variables";

@mixin sm {
	@media (max-width: 599px) {
		@content;
	}
}

@mixin md {
	@media (min-width: 600px) {
		@content;
	}
}

@mixin lg {
	@media (min-width: 960px) {
		@content;
	}
}

:root,
:root[data-theme="light"] {
	body {
		color: theme("text", 1);
		background-color: theme("color-bg", 1);
	}

	code {
		background-color: theme("color-code", 1);
	}

	.jp-MarkdownOutput {
		pre {
			code {
				background-color: theme("color-bg", 1);
			}
		}
	}

	.Cell-output {
		background-color: theme("color-output", 1);
	}

	.Input-editor {
		border: 1px solid theme("border", 1);
		background-color: theme("color-input", 1);
		border-radius: 4px;
	}

	table {
		color: theme("table", 1);
	}

	tbody {
		tr {
			&:nth-child(2n) {
				background-color: theme("color-contrast", 1);
			}

			&:nth-child(2n+1) {
				background-color: theme("color-bg", 1);
			}
		}
	}

	@for $i from 1 through 6 {
		h#{$i} {
			color: theme("text", 1);
		}
	}

	.cell-selected {
		background-color: theme("color-contrast", 1);
	}
}

:root[data-theme="dark"] {
	body {
		color: theme("text", 2);
		background-color: theme("color-bg", 2);
	}

	code {
		background-color: theme("color-code", 2);
	}

	.jp-MarkdownOutput {
		pre {
			code {
				background-color: theme("color-bg", 2);
			}
		}
	}

	.Cell-output {
		background-color: theme("color-output", 2);
	}

	.Input-editor {
		border: 1px solid theme("border", 2);
		background-color: theme("color-input", 2);
		border-radius: 4px;
	}

	table {
		color: theme("table", 2);
	}

	tbody {
		tr {
			&:nth-child(2n) {
				background-color: theme("color-contrast", 2);
			}

			&:nth-child(2n+1) {
				background-color: theme("color-bg", 2);
			}
		}
	}

	@for $i from 1 through 6 {
		h#{$i} {
			color: theme("text", 2);
		}
	}

	.cell-selected {
		background-color: theme("color-contrast", 2);
	}
}

body {
	font-family: 'Fira Sans', sans-serif;
	font-size: 1em;

	margin: 0;
}

h1 {
	font-size: 2em;
	font-weight: 400;
}

h2 {
	font-size: 1.8em;
	font-weight: 400;
}

h3 {
	font-size: 1.5em;
	font-weight: 400;
}

h4 {
	font-size: 1.3em;
	font-weight: 400;
}

h5 {
	font-size: 1.2em;
	font-weight: 400;
}

h6 {
	font-size: 1.1em;
	font-weight: 400;
}

code {
	font-family: 'Fira Mono', monospace;
	padding: 1px 5px;
}

.jp-MarkdownOutput {
	pre {
		margin: 1.5em 2em;
	}
}

.cell-output {
	pre {
		code {
			border: 0;
			line-height: 1.3;
			padding: 0;
			white-space: pre-wrap;
		}
	}

	margin: 0 auto;
}

table {
	code {
		font-size: 12px;
	}

	border-collapse: collapse;
	border-spacing: 0;
	border: none;
	font-size: 12px;
	table-layout: fixed;
	margin-left: auto;
	margin-bottom: 1em;
	margin-right: auto;
}

thead {
	border-bottom: 1px solid #bdbdbd;
	vertical-align: bottom;
}

tr {
	td {
		vertical-align: middle;
		padding: 0.5em 0.5em;
		line-height: normal;
		white-space: normal;
		max-width: none;
		border: none;
	}
}

.CodeMirror {
	height: auto;
	width: auto;
}

button {
	background-color: Transparent;
	background-repeat: no-repeat;
	border: none;
	cursor: pointer;
	overflow: hidden;
	outline: none;
}

header {

	display: flex;
	flex-flow: row wrap;

	h1 {
		display: inline;
		margin: 0;
		//color: #fff;
	}

	.header {
		padding: 10px 0;
		display: flex;
		width: 100%;
		justify-content: flex-start;

		.logo {
			margin: 0 10px;
		}

		.title {
			margin: 0 10px;
		}

		div {
			display: flex;
			flex: 0 1 auto;
		}
	}

	.actionbar {
		display: flex;
		width: 100%;

		.actionbar-container {
			display: flex;
			justify-content: space-between;
			margin: 0;
			padding: 0;
			width: 100%;

			>li {
				list-style-type: none;
				flex: 1;
				text-align: center;
				line-height: 40px;
			}
		}
	}
}

/*
.cell {
	margin: 20px 0;
	font-family: 'Fira Mono', monospace;
}

.cell-input {
	margin: 0 auto;
}

.cell[data-language='markdown'] {

	.cell-input,
	.cell-output {
		width: 85%;
	}
}

.cell[data-language='python'] {
	display: flex;
	justify-content: space-between;
	flex-wrap: wrap;

	.py-input-status,
	.py-output-status {
		width: 5%;
		display: flex;
		display: 0 0 5%;
	}

	.cell-input,
	.cell-output {
		width: 90%;
		margin-right: 5%;
		display: flex;
		display: 0 0 95%;
	}
}*/

.grid {
	display: grid;
	grid-auto-rows: auto;

	@include sm {
		grid-template-columns: repeat(4, 1fr);
		margin: 0 32px;
		$gap: minmax(16px, auto);
		column-gap: $gap;

		.start-sm-1 {
			margin-left: $gap;
		}

		@for $i from 1 through 4 {
			.start-sm-#{$i} {
				grid-column-start: $i;
			}

			.end-sm-#{$i} {
				grid-column-end: $i;
			}
		}

		.end-sm-5 {
			grid-column-end: 5;
		}
	}

	@include md {
		grid-template-columns: repeat(8, 1fr);
		margin: 0 48px;
		$gap: minmax(16px, 24px);
		column-gap: $gap;

		.start-md-1 {
			margin-left: $gap;
		}

		@for $i from 1 through 8 {
			.start-md-#{$i} {
				grid-column-start: $i;
			}

			.end-md-#{$i} {
				grid-column-end: $i;
			}
		}

		.end-md-9 {
			grid-column-end: 9;
		}
	}

	@include lg {
		grid-template-columns: repeat(12, 1fr);
		margin: 0 48px;
		$gap: minmax(24px, auto);
		column-gap: $gap;

		.start-lg-1 {
			margin-left: $gap;
		}

		@for $i from 1 through 12 {
			.start-lg-#{$i} {
				grid-column-start: $i;
			}

			.end-lg-#{$i} {
				grid-column-end: $i;
			}
		}

		.end-lg-13 {
			grid-column-end: 13;
		}
	}
}